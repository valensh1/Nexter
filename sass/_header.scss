.header {
    background-color: $color-grey-dark-1;
    grid-column: full-start / col-end 6; // Starts after the sidebar and the extra 1.5 column spacing that we gave to both sides for our centered content. The sidebar is one column and we gave 8 columns of content in middle for a total of 9 columns. We have 3 more columns to equal standard 12 column layout so we assigned 1.5 columns on both sides of content specified as 1fr in our grid-template-columns in our base.scss page. We end it at col-end 6 to give the remaining 2 columns we have as our content to the realtors section. Remember that each column grid line has 2 names (col-end 1 and col-start 2) for when counting your columns because this could be confusing if you don't remember this.
    background-image: linear-gradient(rgba($color-secondary, .93), rgba($color-secondary, .93)), url(../img/hero.jpeg); // Creates a linear gradient background color where it goes from left to right with same color and with .93 as the opacity level. The closer to 1 you set opacity the fainter the background image appears. 
    background-size: cover; // Set background size to cover so it doesn't lose its aspect ratio when the screen size is enlarged or shrunk down.
    background-position: center;
    padding: 8rem;
    padding-top: 4rem; // Take 8rem padding that is applied everywhere above and only give padding of 4rem to the top.

    display: grid;
    grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr; // We just define the 1fr height for the first row and it will give the other rows height automatically to fill the rest of the 80vh we assigned to the header section in the base.scss file under the .header class. The result is a big row height for the logo and then the rest of the text near bottom of the container bunched together with the same row height. We then set the second row to min-content and the 3rd row to a fixed height of 6rem. Set the 4th row which is the button to 1fr also which will give it a really big space like the first row but then we adjust that cell individually by using align-self and justify-self properties below. Later for resposive design purposes added minmax function with 6rem being minimum content for 3rd column and a max content of min-content so that items always fit within container and don't overflow.
    grid-template-columns: minmax(min-content, max-content); // Give the column width a width large enough to fit the largest content but later for responsive design purposes later came back and added minmax function so that column is a min-width of the content and a max-width of the largest content;
    gap: 1.5rem;
    justify-content: center; // Centers horizontally the grid items

    &__logo {
        height: 3rem;
        justify-self: center; // Aligns logo horizontally within its grid cell.
    }

    &__btn {
        align-self: start; // We want this to be aligned vertically at the start of the grid cell; Default value is stretch and it stretches entire grid cell. 
        justify-self: start; // We want this to be aligned horizontally at the start of the grid cell; Default value is stretch and it stretches entire grid cell. 
    }

    &__seenon-text {
        font-size: 1.6rem;
        color: $color-grey-light-2;
        display: grid; // Setting up of grid here. The grid items are the seenon-text class itself and the before and after items we inserted are also treated as grid items.
        grid-template-columns: 1fr max-content 1fr; // Only want a tiny max-content space for the text "Seen On"
        gap: 1.5rem;
        align-items: center;

        &::before,
        &::after { // This is the creation of the line that stretches the entire grid cell. Notice the line is created by making a background color and creating a height that is very small.
            content: "";
            height: .1rem;
            display: block;
            background-color: currentColor;
        }

    }

    &__seenon-logos {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 3rem;
        justify-items: center; // Centers each logo item in its grid cell
        align-items: center; // Added for responsive design to ensure items stay vertically centered when screen is resized
        
        img {
            max-height: 2.5rem; // Changed from height to max-height to make responsive; 
            max-width: 100%; // Responsive design added to make the img icons have a max-width of 100% but decrease in size as screen gets smaller.
            filter: brightness(70%); // Makes the image logo appear darker and gives it more a grey color as opposed to the default 100% white looking color
        }
    }


}